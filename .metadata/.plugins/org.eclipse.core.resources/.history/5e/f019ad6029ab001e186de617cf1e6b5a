package baekjoon;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.StringTokenizer;

public class B2745 {
	
	public static void main(String[] args) throws NumberFormatException,IOException {
		// TODO Auto-generated method stub

		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st=new StringTokenizer(br.readLine());
		
		String N=st.nextToken();
		int B=Integer.parseInt(st.nextToken());
		int total=0;
		int al[]=new int[10000];
		
		//N의 알파벳 1의자릿수 뽑기
		for(int i=0;i<=N.length();i++)
		{
			char alpha[]=new char[10000];
			alpha[i-1]=N.charAt(N.length()-i);
		
			if((int)alpha[i-1]>=48 && (int)alpha[i-1]<=57)
			{
				al[i-1]=(int)alpha[i-1]-48;
			}
			else
			{
				al[i-1]=(int)alpha[i]-55;
			}
			
			System.out.println(al[i-1]);
		}
		
		
		for(int i=0;i<N.length();i++)
		{	
			//1의 자리수일때
			if(i==0)
			{
				if(al[0]!=0)
					total=al[0]*1;
				else
					total=0;
			}
			//10의 자리수 이상일때
			else
			{
				//10의 자리면 B^1 100의 자리면 B^2 ... 반복시키기위한 반복문
				for(int j=1;j<N.length()-1;j++)
				{
					if(al[j]!=0)
						total+=al[j]*(Math.pow(B, j));
					else
						total+=0;
				}
			}
		}
		
		System.out.println(total);
		
	}
}
